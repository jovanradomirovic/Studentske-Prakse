/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package studentPractices.form;

import java.sql.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import studentPractices.domain.Practices;
import studentPractices.repository.DatabaseConnection;
import studentPractices.repository.PracticesRepository;

/**
 *
 * @author radom
 */
public class PracticeUI extends javax.swing.JDialog {

    /**
     * Creates new form PrakseUI
     */
    public PracticeUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillTablePractices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPractices = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblPractices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "pozicija", "datum pocetka", "datum zavrsetka", "kompanija", "skolska godina", "lokacija"
            }
        ));
        jScrollPane1.setViewportView(tblPractices);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PracticeUI dialog = new PracticeUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPractices;
    // End of variables declaration//GEN-END:variables

    private void fillTablePractices() {
        DatabaseConnection databaseConnection = new DatabaseConnection();
        try {
            //popuni tabelu tblCity sa podacima iz baze (tabele city)
            //uzmi listu gradova
            List<Practices> practices = new PracticesRepository().getAll();
            databaseConnection.createConnection();

            TableModel tm = tblPractices.getModel();
            //DefaultTableModel dtm = (DefaultTableModel) tm; //nece baciti gresku
            if (tm instanceof DefaultTableModel) {
                DefaultTableModel dtm = (DefaultTableModel) tm;
                
                String query = "SELECT k.naziv, g.godina, m.naziv grad FROM praksa p LEFT JOIN kompanija k ON(p.kompanijaID = k.ID) LEFT JOIN skolska_godina g ON(p.godinaID = g.godina) LEFT JOIN mesto m ON(p.mestoID = m.PID)";
                Statement statement = databaseConnection.connection.prepareStatement(query);
                ResultSet rs = statement.executeQuery(query);
                for (Practices practice : practices) {
                    
                    Object[] rowData = new Object[6];
                    rowData[0] = practice.getPosition();
                    rowData[1] = practice.getStartDate();
                    rowData[2] = practice.getEndDate();
                    
                    rs.next();
                    rowData[3] = rs.getString("naziv");
                    rowData[4] = rs.getString("godina");
                    rowData[5] = rs.getString("grad");
                    
                    dtm.addRow(rowData);
                }
                rs.close();
                statement.close();
            }
            
            databaseConnection.connection.close();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            
        }
    }
}
